name: Generate Op Deps Graph

on:
  push:
    branches: [ main ]

  pull_request:
    # branches: [ main ]

  schedule:
    - cron: '30 2 * * *'

  workflow_dispatch:
    inputs:
      git-ref:
        description: PyTorch Git Ref (Optional)
        required: false

jobs:

  platform-ubuntu_generate-op-deps-graph:

    runs-on: ubuntu-latest
    env:
      NAME: platform-ubuntu.generate-op-deps-graph

    steps:
    - name: install clang/llvm 8
      run: |
        sudo apt-get install -y llvm-8-dev clang-8

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: actions/checkout@v2

    - name: checkout pytorch
      run: |
        git clone --recursive https://github.com/pytorch/pytorch pytorch
        echo "PYTORCH_REV=$(cd pytorch; git rev-parse HEAD)" >> $GITHUB_ENV

    - name: install pytorch pip dependency
      run: |
        python3 -m pip install --upgrade pip
        pip install -r pytorch/requirements.txt
      shell: bash

    - name: generate op deps graph
      run: |
        PYTORCH_ROOT=$(readlink -f pytorch) \
        LLVM_DIR=/usr/lib/llvm-8 \
        ANALYZE_TORCH=1 ./build.sh -debug_path=true

    - name: compress op deps graph
      run: |
        mv build/work/torch_op_deps.yaml build/work/torch_op_deps.debug.yaml
        cat build/work/torch_op_deps.debug.yaml | grep -v '^    ' > build/work/torch_op_deps.yaml
        tar zcf torch_op_deps.debug.tar.gz -C build/work torch_op_deps.debug.yaml
        tar zcf torch_op_deps.tar.gz -C build/work torch_op_deps.yaml
      shell: bash

    - name: upload op deps graph with debug
      uses: actions/upload-artifact@v2
      with:
        name: op-deps-graph-with-debug-path
        path: build/work/torch_op_deps.debug.yaml
        if-no-files-found: ignore

    - name: upload op deps graph
      uses: actions/upload-artifact@v2
      with:
        name: op-deps-graph
        path: build/work/torch_op_deps.yaml
        if-no-files-found: ignore

    - name: get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: nightly-tag-${{ steps.date.outputs.date }}
        release_name: nightly-op-graph-${{ steps.date.outputs.date }}-pytorch-rev-${{ env.PYTORCH_REV }}
        draft: false
        prerelease: false

    - name: upload release asset
      id: upload-release-asset-1
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./torch_op_deps.debug.tar.gz
        asset_name: torch_op_deps.debug.tar.gz
        asset_content_type: application/gzip

    - name: upload release asset
      id: upload-release-asset-2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./torch_op_deps.tar.gz
        asset_name: torch_op_deps.tar.gz
        asset_content_type: application/gzip
